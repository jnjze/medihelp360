version: '3.8'

# Docker Compose para DESARROLLO - Con acceso externo a bases de datos
services:
  # Frontend React App
  frontend-service:
    build: ./frontend-app
    container_name: frontend-service-dev
    ports:
      - "3001:3000"  # Puerto 3001 para evitar conflicto con Grafana (3000)
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8080
      - REACT_APP_ENVIRONMENT=development
      - REACT_APP_VERSION=1.0.0
      - REACT_APP_DEBUG=true
    networks:
      - medihelp360-network
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway-dev
    ports:
      - "8080:8080"
    environment:
      - CONSUL_HOST=consul
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - medihelp360-network
    depends_on:
      - consul

  # User Management Service
  user-management-service:
    build: ./user-management-service
    container_name: user-management-dev
    ports:
      - "8081:8081"  # Expuesto para debugging
    environment:
      - CONSUL_HOST=consul
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-users:5432/users_db
      - SPRING_DATASOURCE_USERNAME=users_user
      - SPRING_DATASOURCE_PASSWORD=users_pass
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - medihelp360-network
    depends_on:
      - postgres-users
      - consul

  # Database Sync Services
  database-sync-service-a:
    build: ./database-sync-service-a
    container_name: database-sync-service-a-dev
    ports:
      - "8082:8082"  # Expuesto para debugging
    environment:
      - CONSUL_HOST=consul
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-sync-a:5432/sync_db_a
      - SPRING_DATASOURCE_USERNAME=sync_user_a
      - SPRING_DATASOURCE_PASSWORD=sync_pass_a
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - medihelp360-network
    depends_on:
      - postgres-sync-a
      - consul

  database-sync-service-b:
    build: ./database-sync-service-b
    container_name: database-sync-service-b-dev
    ports:
      - "8083:8083"  # Expuesto para debugging
    environment:
      - CONSUL_HOST=consul
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-sync-b:3306/sync_db_b
      - SPRING_DATASOURCE_USERNAME=sync_user_b
      - SPRING_DATASOURCE_PASSWORD=sync_pass_b
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - medihelp360-network
    depends_on:
      - mysql-sync-b
      - consul

  database-sync-service-c:
    build: ./database-sync-service-c
    container_name: database-sync-service-c-dev
    ports:
      - "8084:8084"  # Expuesto para debugging
    environment:
      - CONSUL_HOST=consul
      - SPRING_DATA_MONGODB_URI=mongodb://sync_user_c:sync_pass_c@mongo-sync-c:27017/sync_db_c
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - medihelp360-network
    depends_on:
      - mongo-sync-c
      - consul

  # Consul
  consul:
    image: consul:1.15.3
    container_name: consul-dev
    ports:
      - "8500:8500"
    command: >
      consul agent
      -dev
      -server
      -ui
      -node=consul-server
      -client=0.0.0.0
      -data-dir=/consul/data
      -log-level=INFO
    volumes:
      - consul_data:/consul/data
    networks:
      - medihelp360-network

  # BASES DE DATOS CON PUERTOS EXPUESTOS PARA DESARROLLO
  postgres-users:
    image: postgres:15-alpine
    container_name: postgres-users-dev
    ports:
      - "5432:5432"  # ðŸ”‘ EXPUESTO PARA ACCESO EXTERNO
    environment:
      POSTGRES_DB: users_db
      POSTGRES_USER: users_user
      POSTGRES_PASSWORD: users_pass
    volumes:
      - postgres_users_data_dev:/var/lib/postgresql/data
    networks:
      - medihelp360-network

  postgres-sync-a:
    image: postgres:15-alpine
    container_name: postgres-sync-a-dev
    ports:
      - "5433:5432"  # ðŸ”‘ PUERTO DIFERENTE PARA EVITAR CONFLICTOS
    environment:
      POSTGRES_DB: sync_db_a
      POSTGRES_USER: sync_user_a
      POSTGRES_PASSWORD: sync_pass_a
    volumes:
      - postgres_sync_a_data_dev:/var/lib/postgresql/data
    networks:
      - medihelp360-network

  mysql-sync-b:
    image: mysql:8.0
    container_name: mysql-sync-b-dev
    ports:
      - "3306:3306"  # ðŸ”‘ EXPUESTO PARA ACCESO EXTERNO
    environment:
      MYSQL_DATABASE: sync_db_b
      MYSQL_USER: sync_user_b
      MYSQL_PASSWORD: sync_pass_b
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - mysql_sync_b_data_dev:/var/lib/mysql
    networks:
      - medihelp360-network

  mongo-sync-c:
    image: mongo:7.0
    container_name: mongo-sync-c-dev
    ports:
      - "27017:27017"  # ðŸ”‘ EXPUESTO PARA ACCESO EXTERNO
    environment:
      MONGO_INITDB_DATABASE: sync_db_c
      MONGO_INITDB_ROOT_USERNAME: sync_user_c
      MONGO_INITDB_ROOT_PASSWORD: sync_pass_c
    volumes:
      - mongo_sync_c_data_dev:/data/db
    networks:
      - medihelp360-network

  # Kafka y Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper-dev
    ports:
      - "2181:2181"  # Expuesto para herramientas de desarrollo
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - medihelp360-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-dev
    ports:
      - "9092:9092"  # Expuesto para herramientas de desarrollo
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - medihelp360-network
    depends_on:
      - zookeeper

networks:
  medihelp360-network:
    driver: bridge

volumes:
  consul_data:
  postgres_users_data_dev:
  postgres_sync_a_data_dev:
  mysql_sync_b_data_dev:
  mongo_sync_c_data_dev:
