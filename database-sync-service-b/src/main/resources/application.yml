server:
  port: 8083
  servlet:
    context-path: /api/v1

spring:
  application:
    name: database-sync-service-b
  
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        enabled: true
        register: true
        deregister: true
        prefer-ip-address: true
        health-check-path: /api/v1/actuator/health
        health-check-interval: 10s
        health-check-timeout: 3s
        health-check-critical-timeout: 30s
        instance-id: ${spring.application.name}:${server.port}
        service-name: ${spring.application.name}
        tags:
          - microservice
          - database-sync
          - mysql
          - version-1.0
  
  datasource:
    url: jdbc:mysql://localhost:3306/sync_db_b?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: sync_user_b
    password: sync_pass_b
    driver-class-name: com.mysql.cj.jdbc.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
  
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: sync-service-b-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: userEvent:com.example.sync.event.UserEvent
    
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.example.sync: DEBUG
    org.springframework.kafka: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/database-sync-service-b.log

# Configuración específica del servicio
sync:
  service:
    name: "Database Sync Service B"
    version: "1.0.0"
    description: "Servicio de sincronización de usuarios con MySQL"
  
  kafka:
    topics:
      user-events: user-events
    
  mysql:
    tables:
      users: users_sync
    
  retry:
    max-attempts: 3
    delay: 1000
    multiplier: 2.0

# Security Configuration for API Gateway Only Access
security:
  gateway:
    # Solo permitir requests desde el API Gateway
    allowed-origins:
      - "http://localhost:8080"
    # Header personalizado que debe enviar el API Gateway
    required-header:
      name: "X-Gateway-Request"
      value: "medihelp360-gateway"
  
  # Configuración para desarrollo (bloquear acceso directo por defecto)
  development:
    allow-direct-access: false  # Por defecto NO permitir acceso directo 